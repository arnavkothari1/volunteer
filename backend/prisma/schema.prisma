generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id            String        @id @default(cuid()) @map("_id")
  email         String        @unique
  password      String
  firstName     String
  lastName      String
  role          Role         @default(STUDENT)
  location      String?
  userType      String?
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
  company       Company?     @relation("CompanyOrganizer")
  applications  Application[] @relation("StudentApplications")
}

model Company {
  id          String   @id @default(cuid()) @map("_id")
  name        String
  description String
  location    String
  email       String
  industry    String
  mission     String
  benefits    String
  position    String   // The organizer's position in the company
  occupiedPositions Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  organizer   User     @relation("CompanyOrganizer", fields: [organizerId], references: [id])
  organizerId String   @unique
  internships Internship[] @relation("CompanyInternships")
  tasks       Task[]      @relation("CompanyTasks")
}

model Internship {
  id           String        @id @default(cuid()) @map("_id")
  title        String
  description  String
  companyId    String
  company      Company       @relation("CompanyInternships", fields: [companyId], references: [id])
  location     String
  status       String        // e.g., "OPEN", "CLOSED"
  isRemote     Boolean       @default(false)
  requirements String[]
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  applications Application[] @relation("InternshipApplications")
}

model Application {
  id              String     @id @default(cuid()) @map("_id")
  studentId       String
  student         User       @relation("StudentApplications", fields: [studentId], references: [id])
  internshipId    String
  internship      Internship @relation("InternshipApplications", fields: [internshipId], references: [id])
  status          String     // e.g., "PENDING", "ACCEPTED", "REJECTED"
  fullName        String
  email           String
  skills          String[]
  coverLetter     String
  aadharCard      String    // URL/path to stored Aadhar card document
  tenthMarksheet  String    // URL/path to stored 10th marksheet
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @updatedAt
}

model Task {
  id            String   @id @default(cuid()) @map("_id")
  title         String
  description   String
  status        String   // e.g., "TODO", "IN_PROGRESS", "COMPLETED"
  companyId     String
  company       Company  @relation("CompanyTasks", fields: [companyId], references: [id])
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

enum Role {
  STUDENT
  ORGANIZER
  ADMIN
}

enum ApplicationStatus {
  PENDING
  ACCEPTED
  REJECTED
}
